[{"/Users/amandapark/Desktop/Proj/doggomatching/src/App.js":"1","/Users/amandapark/Desktop/Proj/doggomatching/src/components/Home.js":"2","/Users/amandapark/Desktop/Proj/doggomatching/src/reportWebVitals.js":"3","/Users/amandapark/Desktop/Proj/doggomatching/src/components/Navigation.js":"4","/Users/amandapark/Desktop/Proj/doggomatching/src/index.js":"5","/Users/amandapark/Desktop/Proj/doggomatching/src/components/SignUpContainer.js":"6","/Users/amandapark/Desktop/Proj/doggomatching/src/components/SignUpErros.js":"7"},{"size":571,"mtime":1609311645952,"results":"8","hashOfConfig":"9"},{"size":2095,"mtime":1609318527370,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1608613887878,"results":"11","hashOfConfig":"9"},{"size":1556,"mtime":1608762549130,"results":"12","hashOfConfig":"9"},{"size":564,"mtime":1609476274783,"results":"13","hashOfConfig":"9"},{"size":14015,"mtime":1609648436211,"results":"14","hashOfConfig":"9"},{"size":547,"mtime":1609646862711,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5yv57k",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/amandapark/Desktop/Proj/doggomatching/src/App.js",[],"/Users/amandapark/Desktop/Proj/doggomatching/src/components/Home.js",["33","34"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport homePic from '../resource/homePic.jpg';\n\nimport { Button} from 'react-bootstrap';\n\nconst Home = () => {\n    return (\n        <div>\n            <header className=\"container\" id=\"pic\">\n                <div>\n                    <h1 id=\"landing-title\">Find Freinds and Partners for Your Puppy</h1>\n                    <Button variant=\"primary\" id=\"landing-page-btn\">CREATE ACCOUNT</Button>{''}\n                </div>\n            <div id=\"wrapper\">  \n            <div id=\"yourdiv\">Read more about Doggo Match <span role=\"img\" aria-label=\"down arrow\">â†“</span></div>\n            </div>\n            </header>\n            <div className=\"main\">\n                <h3 style={{ \"textAlign\": \"center\" }}>Some Sample Content</h3>\n                <p>\n                    Web browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for the appearance of the document.\n                </p>\n                <p>\n                    Web browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for the appearance of the document.\n                </p>\n                <p>\n                    Web browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for the appearance of the document.\n                </p>\n                <p>\n                    Web browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for the appearance of the document.\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","/Users/amandapark/Desktop/Proj/doggomatching/src/reportWebVitals.js",[],"/Users/amandapark/Desktop/Proj/doggomatching/src/components/Navigation.js",["35"],"import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport logo from '../resource/logo.png';\n\nconst Navigation = () => {\n    //TODO: the useLocation is not working\n    //const rootPath = useLocation().pathname.split(\"/\")[1];\n    //console.log(rootPath);\n    return (\n        // bg=\"dark\"\n            <Navbar id=\"nav\" expand=\"lg\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"></Navbar.Toggle>\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <NavLink className=\"navbar-brand\" to=\"/\">\n                        <div class=\"header\">\n                            <img src={logo} alt=\"Logo\" id=\"brand-logo\"/>\n                            <h1 id=\"brand-title\">Doggo Match</h1>\n                        </div>\n                    </NavLink>\n                    <Nav className=\"justify-content-end\" style={{ width: \"100%\" }}>\n                        <NavLink className=\"d-inline p-2  link-path\" to=\"/\">HOME</NavLink>\n                        <NavLink className=\"d-inline p-2  link-path\" to=\"/signup\">SignUp</NavLink>\n                        {/* {this.props.isSignedIn ? <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/\" onClick={this.props.handleSignOut}>Sign Out</NavLink> :\n                            <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/login\">LOG IN</NavLink>\n                        } */}\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n    )\n}\n\nexport default Navigation;","/Users/amandapark/Desktop/Proj/doggomatching/src/index.js",[],"/Users/amandapark/Desktop/Proj/doggomatching/src/components/SignUpContainer.js",["36","37","38","39","40"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Button, Form, Modal } from \"react-bootstrap\";\nimport SignUpErrors from './SignUpErros';\n\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\nconst SignUpContainer = () => {\n    const [firstName, setFirstname] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [nameOfPet, setPetName] = useState(\"\");\n    const [sizeOfPet, setPetSize] = useState(\"\");\n    const [sexOfPet, setSexPet] = useState(\"\");\n    const [ageOfPet, setPetAge] = useState(\"\");\n    const [personalityOfPet, setPetPersonality] = useState(\"\");\n    const [sizePreferece, setPetFriendSize] = useState(\"\");\n    const [areaOfInterest, setAreaOfInterest] = useState(\"\");\n    const [fbName, setFbName] = useState(\"\");\n    const [instagramName, setInstagramName] = useState(\"\");\n    const [zipcode, setZipcode] = useState(\"\");\n    const [error, setError] = useState(false);\n \n\n    const  personalityOptions =  [\n        { key: \"Frendly\" },\n        { key: \"Shy\"  },\n        { key: \"Ambitious\" },\n        { key: \"Impulsive\" },\n        { key: \"Confident\" },\n        { key: \"Independent\" },\n        { key: \"Laidback\" }\n    ]\n\n    const sizePreferenceOptions = [\n        { key: \"Small\" },\n        { key: \"Medium\"  },\n        { key: \"Large\" }\n    ]\n\n    const areaOfInterestOptions = [\n        { key: \"Making Friends\" },\n        { key: \"Breeding\"  },\n    ]\n\n    var personalityLi = [];\n    var sizePrefereceLi = [];\n    var interestLi = [];\n\n    const handleAddPersonality = (e) => {\n        e.forEach((evt) => {\n            personalityLi.push(evt.key);\n        })\n        setPetPersonality(personalityLi);\n    }\n\n    const handleSizePreferences = (e) => {\n        e.forEach((evt) => {\n            sizePrefereceLi.push(evt.key);\n        })\n        setPetFriendSize(sizePrefereceLi);\n    }\n\n    const handleIntersts = (e) => {\n        e.forEach((evt) => {\n            interestLi.push(evt.key);\n        })\n        setAreaOfInterest(interestLi);\n    }\n\n    const handleEmptyMutipleSelectField = () => {\n        console.log('personalityOfPet[0]', personalityOfPet[0])\n        if (personalityOfPet[0] !== undefined && sizePreferece[0] !== undefined && areaOfInterest[0] !== undefined) {\n            console.log('personalityOfPet', personalityOfPet)\n            console.log('sizePreferece', sizePreferece)\n            console.log('areaOfInterest', areaOfInterest)\n            return true;\n        } \n        console.log('whatt')\n        return false;\n    }\n\n    const handlePopup = () => {\n        console.log(\"nani\")\n        setError(false);\n    }\n\n    const onSubmit = evt => {\n        evt.preventDefault();\n\n        //any of the fieds are empty\n  \n\n        const registered = {\n            firstname: firstName,\n            lastname: lastName,\n            email: email,\n            username: username, \n            password: password, \n            zip: zipcode,\n            nameOfPet: nameOfPet,\n            sizeOfPet: sizeOfPet,\n            sexOfPet: sexOfPet,\n            ageOfPet: ageOfPet,\n            personalityOfPet: personalityOfPet,\n            sizePrefereceToBeFrined: sizePreferece,\n            areaOfInterest: areaOfInterest,\n            fbName: fbName,\n            instagramName: instagramName,\n            city: city,\n            state: state,\n        }\n\n        //maually validate mutiple select field\n        if (handleEmptyMutipleSelectField()) {\n            axios.post('http://localhost:4000/app/signup', registered)\n            .then(response => console.log(response.data))\n        }else {\n            setError(true);\n        }\n\n    }\n\n    return (\n        <>\n        <Form onSubmit={onSubmit} className=\"form-view\">\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridFirstName\" className=\"text-box\">\n                    <Form.Label>Firstname</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"Enter Firstname\" onChange={e => setFirstname(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridLastName\">\n                    <Form.Label>Lastname</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"Enter Password\" onChange={e => setLastName(e.target.value)} />\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridUsername\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"Enter Username\" onChange={e => setUsername(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control required type=\"password\" placeholder=\"Enter Password\" onChange={e => setPassword(e.target.value)} />\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control required type=\"email\" placeholder=\"Enter Email\" onChange={e => setEmail(e.target.value)} />\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridFirstName\">\n                    <Form.Label>Facebook Username (Will be shared with matched user) </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Firstname\" onChange={e => setFirstname(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridLastName\">\n                    <Form.Label>Instagram Username (Will be shared with matched user) </Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Password\" onChange={e => setLastName(e.target.value)} />\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridCity\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control required placeholder=\"Enter City\" onChange={e => setCity(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridState\" onChange={e => setState(e.target.value)}>\n                    <Form.Label>State</Form.Label>\n                    <Form.Control required as=\"select\" defaultValue=\"Choose...\">\n                        <option key='blankChoice' hidden value />\n                        <option value=\"AK\">Alaska</option>\n                        <option value=\"AL\">Alabama</option>\n                        <option value=\"AR\">Arkansas</option>\n                        <option value=\"AZ\">Arizona</option>\n                        <option value=\"CA\">California</option>\n                        <option value=\"CO\">Colorado</option>\n                        <option value=\"CT\">Connecticut</option>\n                        <option value=\"DC\">District of Columbia</option>\n                        <option value=\"DE\">Delaware</option>\n                        <option value=\"FL\">Florida</option>\n                        <option value=\"GA\">Georgia</option>\n                        <option value=\"HI\">Hawaii</option>\n                        <option value=\"IA\">Iowa</option>\n                        <option value=\"ID\">Idaho</option>\n                        <option value=\"IL\">Illinois</option>\n                        <option value=\"IN\">Indiana</option>\n                        <option value=\"KS\">Kansas</option>\n                        <option value=\"KY\">Kentucky</option>\n                        <option value=\"LA\">Louisiana</option>\n                        <option value=\"MA\">Massachusetts</option>\n                        <option value=\"MD\">Maryland</option>\n                        <option value=\"ME\">Maine</option>\n                        <option value=\"MI\">Michigan</option>\n                        <option value=\"MN\">Minnesota</option>\n                        <option value=\"MO\">Missouri</option>\n                        <option value=\"MS\">Mississippi</option>\n                        <option value=\"MT\">Montana</option>\n                        <option value=\"NC\">North Carolina</option>\n                        <option value=\"ND\">North Dakota</option>\n                        <option value=\"NE\">Nebraska</option>\n                        <option value=\"NH\">New Hampshire</option>\n                        <option value=\"NJ\">New Jersey</option>\n                        <option value=\"NM\">New Mexico</option>\n                        <option value=\"NV\">Nevada</option>\n                        <option value=\"NY\">New York</option>\n                        <option value=\"OH\">Ohio</option>\n                        <option value=\"OK\">Oklahoma</option>\n                        <option value=\"OR\">Oregon</option>\n                        <option value=\"PA\">Pennsylvania</option>\n                        <option value=\"PR\">Puerto Rico</option>\n                        <option value=\"RI\">Rhode Island</option>\n                        <option value=\"SC\">South Carolina</option>\n                        <option value=\"SD\">South Dakota</option>\n                        <option value=\"TN\">Tennessee</option>\n                        <option value=\"TX\">Texas</option>\n                        <option value=\"UT\">Utah</option>\n                        <option value=\"VA\">Virginia</option>\n                        <option value=\"VT\">Vermont</option>\n                        <option value=\"WA\">Washington</option>\n                        <option value=\"WI\">Wisconsin</option>\n                        <option value=\"WV\">West Virginia</option>\n                        <option value=\"WY\">Wyoming</option>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridZip\" onChange={e => setZipcode(e.target.value)}>\n                    <Form.Label>Zipcode</Form.Label>\n                <Form.Control required placeholder=\"Enter Zipcode\"/>\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridNameOfPet\">\n                    <Form.Label>Name of Pet</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"Enter Name of Pet\" onChange={e => setPetName(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridNameOfPet\">\n                    <Form.Label>Size of Pet</Form.Label>\n                    <Form.Control required as=\"select\" defaultValue=\"Choose...\" onChange={(e)=> setPetSize(e.target.value)} >\n                        <option key='blankChoice' hidden value />\n                        <option value=\"small\">Small</option>\n                        <option value=\"medium\">Medium</option>\n                        <option value=\"large\">Large</option>\n                    </Form.Control>\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridNameOfPet\">\n                <Form.Label>Sex of Pet</Form.Label>\n                <Form.Control required as=\"select\" defaultValue=\"Choose...\" onChange={(e) => setSexPet(e.target.value)}>\n                    <option key='blankChoice' hidden value />\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Male\">Male</option>\n                </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridNameOfPet\">\n                <Form.Label>Age of Pet</Form.Label>\n                <Form.Control required type=\"text\" placeholder=\"Enter Size of Pet\" onChange={e => setPetAge(e.target.value)} />\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridNameOfPet\">\n                <Form.Label>Personality of Pet</Form.Label>\n                <Multiselect\n                    options={personalityOptions}\n                    displayValue=\"key\"\n                    showCheckbox={true}\n                    onSelect={ handleAddPersonality }\n                    onRemove={ handleAddPersonality }\n                    closeIcon=\"close\"\n                />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridFriendPreference\" required>\n                    <Form.Label>Pet Friend Preference Size</Form.Label>\n                    <Multiselect\n                        options={sizePreferenceOptions}\n                        displayValue=\"key\"\n                        showCheckbox={true}\n                        onSelect={ handleSizePreferences }\n                        onRemove={ handleSizePreferences }\n                        closeIcon=\"close\"\n                    />\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridNameOfPet\">\n                    <Form.Label>Area of Interest</Form.Label>\n                    <Multiselect\n                        options={areaOfInterestOptions}\n                        displayValue=\"key\"\n                        showCheckbox={true}\n                        onSelect={ handleIntersts }\n                        onRemove={ handleIntersts }\n                        closeIcon=\"close\"\n                    />\n                </Form.Group>\n            </Form.Row>\n\n            <input type='submit' className='btn btn-danger btn-block' \n            value='Submit'></input>\n            {error? <SignUpErrors error={error} handlePopup={handlePopup}></SignUpErrors> : console.log(\"wtf\")}\n        </Form>\n        </>\n    )\n}\n\nexport default SignUpContainer;","/Users/amandapark/Desktop/Proj/doggomatching/src/components/SignUpErros.js",["41"],{"ruleId":"42","severity":1,"message":"43","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":14},{"ruleId":"42","severity":1,"message":"46","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":15},{"ruleId":"42","severity":1,"message":"47","line":2,"column":19,"nodeType":"44","messageId":"45","endLine":2,"endColumn":30},{"ruleId":"42","severity":1,"message":"48","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"42","severity":1,"message":"49","line":2,"column":15,"nodeType":"44","messageId":"45","endLine":2,"endColumn":21},{"ruleId":"42","severity":1,"message":"50","line":2,"column":29,"nodeType":"44","messageId":"45","endLine":2,"endColumn":34},{"ruleId":"42","severity":1,"message":"51","line":24,"column":20,"nodeType":"44","messageId":"45","endLine":24,"endColumn":29},{"ruleId":"42","severity":1,"message":"52","line":25,"column":27,"nodeType":"44","messageId":"45","endLine":25,"endColumn":43},{"ruleId":"42","severity":1,"message":"53","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'homePic' is defined but never used.","'useLocation' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'setFbName' is assigned a value but never used.","'setInstagramName' is assigned a value but never used.","'useState' is defined but never used."]